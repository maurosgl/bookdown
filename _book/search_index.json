[["index.html", "Series de Tiempo - Predicción de Precios de Frutas y Verduras en Nepal Capítulo 1 Introducción", " Series de Tiempo - Predicción de Precios de Frutas y Verduras en Nepal Grupo 2 2025-10-22 Capítulo 1 Introducción Time Series Price Vegetables and Fruits El conjunto de datos “Time Series Price Vegetables and Fruits” contiene información oficial sobre los precios diarios de las principales frutas y verduras en Nepal entre 2013 y 2021 de una fuente oficial del gobierno (Kalimati), compilada en un repositorio público Kaggle. Commodity: Nombre de las frutas o vegetales Date: Fecha en formato año - mes – día Unit: Unidad de medida (Kg) Minimum: Precio mínimo registrado de venta del día Maximum: Precio máximo registrado de venta del día Average: Precio promedio de venta del día Analizar y predecir el precio de productos agrícolas es fundamental para poder tomar decisiones informadas, asignar los recursos de una manera óptima y contribuir al crecimiento económico del agro. Por la dinámica de los precios en frutas y verduras, que se encuentra condicionada por temporadas de cosecha, factores climáticos y la relación entre oferta y demanda, resulta complejo proyectar precios de manera certera. Con modelos tradicionales de análisis, captar patrones puede ser difícil; sin embargo, esta limitación puede superarse mediante técnicas de machine learning aplicadas a series de tiempo. La selección del dataset se debe al carácter temporal y a la granularidad de los datos, lo que facilita hallar tendencias y estacionalidades en los precios, emplear datos históricos para predecir precios futuros, así como detectar patrones inusuales o anomalías en los datos. Otro valor importante que puede lograrse a través del análisis del conjunto de datos es el desarrollo de estrategias de precios basadas en los patrones hallados. "],["eda-y-análisis-de-series-de-tiempo.html", "Capítulo 2 EDA y Análisis de Series de tiempo", " Capítulo 2 EDA y Análisis de Series de tiempo 2.0.1 Cargue de Datos # Librerias library(readr) ## Warning: package &#39;readr&#39; was built under R version 4.3.3 library(dplyr) ## Warning: package &#39;dplyr&#39; was built under R version 4.3.3 ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union library(lubridate) ## Warning: package &#39;lubridate&#39; was built under R version 4.3.3 ## ## Attaching package: &#39;lubridate&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## date, intersect, setdiff, union library(ggplot2) library(forecast) ## Warning: package &#39;forecast&#39; was built under R version 4.3.3 ## Registered S3 method overwritten by &#39;quantmod&#39;: ## method from ## as.zoo.data.frame zoo library(tseries) ## Warning: package &#39;tseries&#39; was built under R version 4.3.3 2.0.2 Cargue de datos # Cargar datos data &lt;- read_csv(&quot;C:/Users/Steba/OneDrive/Escritorio/kalimati_tarkari_dataset (2).csv&quot;, show_col_types = FALSE) 2.0.3 Análisis Exploratorio de Datos (EDA) # Vista previa de los datos head(data) ## # A tibble: 6 × 7 ## SN Commodity Date Unit Minimum Maximum Average ## &lt;dbl&gt; &lt;chr&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 Tomato Big(Nepali) 2013-06-16 Kg 35 40 37.5 ## 2 1 Tomato Small(Local) 2013-06-16 Kg 26 32 29 ## 3 2 Potato Red 2013-06-16 Kg 20 21 20.5 ## 4 3 Potato White 2013-06-16 Kg 15 16 15.5 ## 5 4 Onion Dry (Indian) 2013-06-16 Kg 28 30 29 ## 6 5 Carrot(Local) 2013-06-16 Kg 30 35 32.5 # comando para saber el tipo de datos str(data) ## spc_tbl_ [197,161 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame) ## $ SN : num [1:197161] 0 1 2 3 4 5 6 7 8 9 ... ## $ Commodity: chr [1:197161] &quot;Tomato Big(Nepali)&quot; &quot;Tomato Small(Local)&quot; &quot;Potato Red&quot; &quot;Potato White&quot; ... ## $ Date : Date[1:197161], format: &quot;2013-06-16&quot; &quot;2013-06-16&quot; ... ## $ Unit : chr [1:197161] &quot;Kg&quot; &quot;Kg&quot; &quot;Kg&quot; &quot;Kg&quot; ... ## $ Minimum : num [1:197161] 35 26 20 15 28 30 6 30 35 25 ... ## $ Maximum : num [1:197161] 40 32 21 16 30 35 10 35 40 30 ... ## $ Average : num [1:197161] 37.5 29 20.5 15.5 29 32.5 8 32.5 37.5 27.5 ... ## - attr(*, &quot;spec&quot;)= ## .. cols( ## .. SN = col_double(), ## .. Commodity = col_character(), ## .. Date = col_date(format = &quot;&quot;), ## .. Unit = col_character(), ## .. Minimum = col_double(), ## .. Maximum = col_double(), ## .. Average = col_double() ## .. ) ## - attr(*, &quot;problems&quot;)=&lt;externalptr&gt; # Resumen estadístico de los datos summary(data) ## SN Commodity Date Unit ## Min. : 0 Length:197161 Min. :2013-06-16 Length:197161 ## 1st Qu.: 49290 Class :character 1st Qu.:2015-08-24 Class :character ## Median : 98580 Mode :character Median :2017-08-03 Mode :character ## Mean : 98580 Mean :2017-08-09 ## 3rd Qu.:147870 3rd Qu.:2019-08-27 ## Max. :197160 Max. :2021-05-13 ## Minimum Maximum Average ## Min. : 1.00 Min. : 6.00 Min. : 5.00 ## 1st Qu.: 40.00 1st Qu.: 45.00 1st Qu.: 42.50 ## Median : 60.00 Median : 70.00 Median : 65.00 ## Mean : 85.42 Mean : 94.16 Mean : 89.79 ## 3rd Qu.: 100.00 3rd Qu.: 110.00 3rd Qu.: 105.00 ## Max. :1800.00 Max. :2000.00 Max. :1900.00 # Verificar valores faltantes sum(is.na(data)) ## [1] 0 No se observan datos faltantes en el dataset # Verificar datos duplicados sum(duplicated(data)) ## [1] 0 No se observan datos duplicados en el dataset 2.0.4 análisis Univariado # Distribución de precios promedio ggplot(data, aes(x = Average)) + geom_histogram(binwidth = 5, fill = &quot;blue&quot;, color = &quot;black&quot;, alpha = 0.7) + labs(title = &quot;Distribución de Precios Promedio&quot;, x = &quot;Precio Promedio&quot;, y = &quot;Frecuencia&quot;) + theme_minimal() # Estadísticas descriptivas de precios promedio data %&gt;% summarise( Mean = mean(Average), Median = median(Average), SD = sd(Average), Min = min(Average), Max = max(Average) ) ## # A tibble: 1 × 5 ## Mean Median SD Min Max ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 89.8 65 79.6 5 1900 2.0.5 Análisis Bivariado # Relación entre precio mínimo y precio máximo ggplot(data, aes(x = Minimum, y = Maximum)) + geom_point(alpha = 0.5) + labs(title = &quot;Relación entre Precio Mínimo y Máximo&quot;, x = &quot;Precio Mínimo&quot;, y = &quot;Precio Máximo&quot;) + theme_minimal() # Correlación entre precio mínimo y precio máximo cor(data$Minimum, data$Maximum) ## [1] 0.9950614 2.0.6 Análisis de Series de Tiempo 2.0.7 Filtrar 3 items # Filtrar datos para un solo commodity potatored_ts &lt;- data %&gt;% filter(Commodity == &quot;Potato Red&quot;) # autoplot de la serie de tiempo del precio promedio autoplot(ts(potatored_ts$Average, frequency = 365, start = c(2013, 1))) + labs(title = &quot;Serie de Tiempo: Precio Promedio de Papa Roja&quot;, y = &quot;Precio Promedio&quot;) + theme_minimal() autoplot(decompose(ts(potatored_ts$Average, frequency = 365, start = c(2013, 1)))) ggseasonplot(ts(potatored_ts$Average, frequency = 365, start = c(2013, 1)), year.labels=TRUE, year.labels.left=TRUE) + labs(title = &quot;Seasonal Plot: Precio Promedio&quot;, y = &quot;Precio Promedio&quot;) + theme_minimal() ggsubseriesplot(ts(potatored_ts$Average, frequency = 365, start = c(2013, 1))) + labs(title = &quot;Subseries Plot: Precio Promedio&quot;, y = &quot;Precio Promedio&quot;) + theme_minimal() ggAcf(ts(potatored_ts$Average, frequency = 365, start = c(2013, 1)), main = &quot;ACF del Precio Promedio&quot;) ## Warning in ggplot2::geom_segment(lineend = &quot;butt&quot;, ...): Ignoring unknown ## parameters: `main` decompose(ts_data &lt;- ts(potatored_ts$Average, frequency = 365, start = c(2013, 1)) )$trend %&gt;% autoplot() + labs(title = &quot;Tendencia del Precio Promedio&quot;, y = &quot;Tendencia&quot;) + theme_minimal() decompose(ts_data &lt;- ts(potatored_ts$Average, frequency = 365, start = c(2013, 1)) )$seasonal %&gt;% autoplot() + labs(title = &quot;Estacionalidad del Precio Promedio&quot;, y = &quot;Estacionalidad&quot;) + theme_minimal() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
